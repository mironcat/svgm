{"version":3,"sources":["../lib/prepres.js"],"names":["getResults","gi","filename","results","forEach","groupitem","rows","prepareItemGroup","concat","map","addFileName","row","index","ItemGroup","elements","head","scalefactor","text","label","name","measures","t","comments","image","imagefilename","file","imagefoldername","folder","path","el","getRows","line","rect","ellipse","circle","g","arr","mt","prepvalue","toFixed","type","value","title","description","desc","push"],"mappings":"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","sourcesContent":["/**\r\n * svgm\r\n * https://github.com/mironcat/svgm\r\n *\r\n * Copyright (c) 2018 mironcat\r\n * Licensed under the MIT license.\r\n */\r\n'use strict';\r\nfunction getResults(gi, filename) {\r\n    let results = [];\r\n    gi.forEach((groupitem) => {\r\n        const rows = prepareItemGroup(groupitem); // подготовка для таблицы\r\n        results = results.concat(rows);\r\n    });\r\n    return results.map(addFileName);\r\n    function addFileName(row, index, results) {\r\n        row.filename = filename;\r\n        return (results[index] = row);\r\n    }\r\n}\r\n\r\nfunction prepareItemGroup(ItemGroup) {\r\n    // body...\r\n    //debugger;\r\n    let elements = ItemGroup.elements;\r\n    let head = {\r\n        scalefactor: ItemGroup.scalefactor\r\n    };\r\n    var rows = [];\r\n    //item\ttype\tlabel\ttitle\tmeasurevalue\tdescription\tcomments\r\n    elements.text.forEach((text) => {\r\n        if (text.label === \"name\") head.name = text.measures.t;\r\n        if (text.label === \"comments\" || text.label === \"comment\")\r\n            head.comments = text.measures.t;\r\n    });\r\n    elements.image.forEach((image) => {\r\n        head.imagefilename = image.measures.file;\r\n        head.imagefoldername = image.measures.folder;\r\n    });\r\n    if (!head.name) {\r\n        head.name = head.imagefilename;\r\n    }\r\n\r\n    var rows = [];\r\n    //debugger;\r\n    //item\tsubgroup\ttype\tlabel\ttitle\tmeasurevalue\tdescription\tcomments\r\n    elements.path.forEach((el) => {\r\n        rows = rows.concat(getRows(el));\r\n    });\r\n    elements.line.forEach((el) => {\r\n        rows = rows.concat(getRows(el));\r\n    });\r\n    elements.rect.forEach((el) => {\r\n        rows = rows.concat(getRows(el));\r\n    });\r\n    elements.ellipse.forEach((el) => {\r\n        rows = rows.concat(getRows(el));\r\n    });\r\n    elements.circle.forEach((el) => {\r\n        rows = rows.concat(getRows(el));\r\n    });\r\n    elements.g.forEach((el) => {\r\n        rows = rows.concat(getRows(el));\r\n    });\r\n    //\tdebugger;\r\n    return rows;\r\n    function getRows(el) {\r\n        // подготавливает объект element в формат Datatables\r\n\r\n        let scalefactor = head.scalefactor;\r\n        let arr = [];\r\n        for (let mt in el.measures) {\r\n            let prepvalue = el.measures[mt];\r\n            if (typeof prepvalue === 'number' && prepvalue > 1)\r\n                prepvalue = prepvalue.toFixed(2);\r\n            let row = {\r\n                name: head.name,\r\n                type: el.type + '-' + mt,\r\n                label: el.label,\r\n                value: prepvalue,\r\n                title: el.title || '',\r\n                //.toFixed(2)\r\n                description: el.desc || '',\r\n                comments: head.comments || ''\r\n            };\r\n            arr.push(row);\r\n        }\r\n        return arr;\r\n    }\r\n};\r\nexport { getResults };"],"file":"prepres.js"}