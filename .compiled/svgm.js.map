{"version":3,"sources":["../lib/svgm.js"],"names":["SVG","require","mtype","prepareSVG","rawSvg","filename","svgcanvas","document","createElement","setAttribute","body","appendChild","size","svg","groups","getGroups","GroupItems","forEach","groupitem","i","push","getItems","result","rows","prepareItemGroup","concat","numbers1","map","addFileName","row","index","removeChild","paths","select","members","scalebars","scalebarIteration","rects","rectscalebars","lines","linescalebars","scalebar","group","item","parent","scalefactor","items","scalebarFinder","scalefactorConstructor","path","scalebarvalue","d","node","getAttribute","z","indexOf","length","alert","line","points","array","value","point1","point2","dist","x1","x2","y1","y2","Math","sqrt","rect","width","rectheight","height","type","labels","getLabels","label","Number","labelvalue","elements","image","text","ellipse","circle","g","children","el","getProps","ItemGroup","head","name","measures","t","comments","imagefilename","file","imagefoldername","folder","getRows","arr","mt","prepvalue","toFixed","title","description","desc","attributes","attr","id","getMeasures","textContent","labeltext","split","idtext","itemtype","setchars","defchars","measure","strat","chars","matchArr","ch","a1","a2","idx","matchingElements","char","x","cx","y","cy","R","PI","arrayPoints","numberOfPoints","point","calcPathArea","childNodes","tspan","filepath","area","count","polyArea","poly","pts","len","numberOfItems","p1","getItem","p2","abs","pathToPolygonViaSubdivision","BudnikovDataOptimization","rowArray","rowNameExist","FAD","LAD","PubCode","SectCode","note","prepareBudnikovSVG","$","empty","draw","maingroup","get","lineArray","boreArray","boreName","Yzero","ellArr","rY","ry","cY","itemID","console","log","itemNames","slice","results","prepareSecSVG","prepareSecItemGroup","Items","textnames","zero","c","ad","getFADLAD","start","sort","compareNumeric","compareText","a","b","end","h","threshold","segments","subdivide","ptWithLength","getTotalLength","doc","ownerDocument","createElementNS","join","pt","getPointAtLength","step","mids","pop","module","exports"],"mappings":"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","sourcesContent":["/*\n * svgm\n * https://github.com/mironcat/svgm\n *\n * Copyright (c) 2018 mironcat\n * Licensed under the MIT license.\n */\n'use strict';\n// returns a window with a document and an svg root node\n// const window   = require('svgdom');\nconst SVG = require('svg.js');\n// const document = window.document;\nlet mtype = 'strat';\nfunction prepareSVG(rawSvg, filename) {\n  // основная процедура, которая запускает более мелкие\n  // и определяет порядок действия\n  mtype = 'measure'; //тип измерения или разрез\n  // eslint-disable-next-line no-undef\n  const svgcanvas = document.createElement('DIV');\n  svgcanvas.setAttribute('id', 'svgcanvas');\n  svgcanvas.setAttribute('hidden', 'true');\n  // eslint-disable-next-line no-undef\n  document.body.appendChild(svgcanvas);\n  SVG('svgcanvas').size('800', '900').svg(rawSvg); // прорисовка svg\n  // SVG(document.documentElement).svg(rawSvg);\n  //получить группы как родители scalebar\n  let groups = getGroups(); //groups - группы с масштабными линейками\n  //$(\".progress-bar\").css(\"width\", '20%');\n  //debugger;\n  // перебор и получение элементов для каждой группы\n  let GroupItems = [];\n  groups.forEach((groupitem, i) => {\n    GroupItems.push(getItems(groupitem));\n  });\n  //GroupItems- массив объектов-грууп со свойствами:\n  //elements:{image: Array(0), text: Array(2), path: Array(2), line: Array(0), rect: Array(0), …} - обработанные элементы\n  //scalefactor:\n  //$(\".progress-bar\").css(\"width\", '80%');\n  //debugger ;\n  var result = [];\n  GroupItems.forEach((groupitem) => {\n    const rows = prepareItemGroup(groupitem); // подготовка для таблицы\n    result = result.concat(rows);\n    //progressValue = progressValue + progressStep;\n    // //$(\".progress-bar\").css(\"width\", progressValue.toFixed(0) + '%');\n    //debugger;\n  });\n  //$(\".progress-bar\").css(\"width\", '90%');\n\n  let numbers1 = [45, 4, 9, 16, 25];\n  var result = result.map(addFileName);\n  function addFileName(row, index, result) {\n    row.filename = filename;\n    return (result[index] = row);\n  }\n  document.body.removeChild(svgcanvas);\n  return result;\n}\n\nfunction getGroups() {\n  const paths = SVG.select('path').members;\n  let scalebars = scalebarIteration(paths);\n\n  const rects = SVG.select('rect').members;\n  let rectscalebars = scalebarIteration(rects);\n  if (rectscalebars) scalebars = scalebars.concat(rectscalebars);\n  const lines = SVG.select('line').members;\n  let linescalebars = scalebarIteration(lines);\n  if (linescalebars) scalebars = scalebars.concat(linescalebars);\n  let groups = [];\n  if (scalebars)\n    scalebars.forEach((scalebar) => {\n      var group = scalebar.item.parent();\n      groups.push({\n        group: group,\n        scalefactor: scalebar.scalefactor\n      });\n    });\n  return groups;\n  function scalebarIteration(items) {\n    // поиск масштабных линеек,\n    let scalebars = [];\n    items.forEach((item) => {\n      var scalefactor = scalebarFinder(item);\n      if (scalefactor)\n        scalebars.push({\n          item: item,\n          scalefactor: scalefactor\n        });\n    });\n    return scalebars;\n  }\n}\n\nfunction scalebarFinder(item) {\n  let scalefactorConstructor = {\n    path(item, scalebarvalue) {\n      // body...\n\n      var d = item.node.getAttribute(\"d\");\n      var z = d.indexOf(\"z\");\n      var length = item.length();\n      if (z > 0) {\n        alert(\n          \"Масштабный отрезок в виде закрытой кривой! Это может привести к ошибочным вычислениям.\" +\n            \" Исправьте отрезок или используйте прямоугольник (rectangles) для масштабного отрезка\"\n        );\n        length = item.length() / 2;\n      }\n\n      return length / scalebarvalue;\n    },\n    line(item, scalebarvalue) {\n      // body...\n      var points = item.array().value;\n      var point1 = points[0];\n      var point2 = points[1];\n      var length = dist(point1, point2);\n      return length / scalebarvalue;\n      function dist(point1, point2) {\n        var x1 = point1[0],\n          x2 = point2[0];\n        var y1 = point1[1],\n          y2 = point2[1];\n        return Math.sqrt((x2 -= x1) * x2 + (y2 -= y1) * y2);\n      }\n    },\n    rect(item, scalebarvalue) {\n      // body...\n      var length = item.width(),\n        rectheight = item.height();\n      if (rectheight > length) length = rectheight;\n      return length / scalebarvalue;\n    }\n  };\n\n  // body... возвращает scalefactor или false\n  let type = item.type;\n  let labels = getLabels(item);\n  let label = labels.label;\n  if (label === 'scalebar') {\n    let scalebarvalue = Number(labels.labelvalue);\n    let scalefactor = scalefactorConstructor[type](item, scalebarvalue);\n    return scalefactor;\n  }\n  return false;\n}\n\nfunction getItems(groupitem) {\n  ///sfaf\n  let items = {\n    scalefactor: groupitem.scalefactor,\n    elements: {\n      image: [],\n      text: [],\n      path: [],\n      line: [],\n      rect: [],\n      ellipse: [],\n      circle: [],\n      g: []\n    }\n  };\n  let elements = groupitem.group.children();\n\n  //debugger;\n  elements.forEach((item) => {\n    var el = getProps(item, groupitem.scalefactor);\n    if (el != \"scalebar\" && items.elements[el.type])\n      items.elements[el.type].push(el);\n  });\n\n  return items;\n}\n\nfunction prepareItemGroup(ItemGroup) {\n  // body...\n  //debugger;\n  let elements = ItemGroup.elements;\n  let head = {\n    scalefactor: ItemGroup.scalefactor\n  };\n  var rows = [];\n  //item\ttype\tlabel\ttitle\tmeasurevalue\tdescription\tcomments\n  elements.text.forEach((text) => {\n    if (text.label === \"name\") head.name = text.measures.t;\n    if (text.label === \"comments\" || text.label === \"comment\")\n      head.comments = text.measures.t;\n  });\n  elements.image.forEach((image) => {\n    head.imagefilename = image.measures.file;\n    head.imagefoldername = image.measures.folder;\n  });\n  if (!head.name) {\n    head.name = head.imagefilename;\n  }\n\n  var rows = [];\n  //debugger;\n  //item\tsubgroup\ttype\tlabel\ttitle\tmeasurevalue\tdescription\tcomments\n  elements.path.forEach((el) => {\n    rows = rows.concat(getRows(el));\n  });\n  elements.line.forEach((el) => {\n    rows = rows.concat(getRows(el));\n  });\n  elements.rect.forEach((el) => {\n    rows = rows.concat(getRows(el));\n  });\n  elements.ellipse.forEach((el) => {\n    rows = rows.concat(getRows(el));\n  });\n  elements.circle.forEach((el) => {\n    rows = rows.concat(getRows(el));\n  });\n  elements.g.forEach((el) => {\n    rows = rows.concat(getRows(el));\n  });\n  //\tdebugger;\n  return rows;\n  function getRows(el) {\n    // подготавливает объект element в формат Datatables\n\n    let scalefactor = head.scalefactor;\n    let arr = [];\n    for (let mt in el.measures) {\n      let prepvalue = el.measures[mt];\n      if (typeof prepvalue === 'number' && prepvalue > 1)\n        prepvalue = prepvalue.toFixed(2);\n      let row = {\n        name: head.name,\n        type: el.type + '-' + mt,\n        label: el.label,\n        value: prepvalue,\n        title: el.title || '',\n        //.toFixed(2)\n        description: el.desc || '',\n        comments: head.comments || ''\n      };\n      arr.push(row);\n    }\n    return arr;\n  }\n}\n\nfunction getProps(item, scalefactor) {\n  // body...\n  let labels = getLabels(item);\n  let label = labels.label;\n  if (label === 'scalebar') return label;\n  let type = item.type;\n  let attributes = item.attr();\n  let id = attributes['id'];\n  let el = {\n    type,\n    id,\n    label\n  };\n  let measures = getMeasures(item, id, scalefactor);\n  if (measures) el.measures = measures;\n\n  let desc = SVG.select('desc', item.node).members[0];\n  let title = SVG.select('title', item.node).members[0];\n  if (desc) el.desc = desc.node.textContent;\n  if (title) {\n    //console.log(title);\n    el.title = title.node.textContent;\n  }\n\n  //debugger;\n  return el;\n}\n\nfunction getLabels(item) {\n  // body...\n\n  let attributes = item.attr();\n  // debugger;\n  let labeltext = attributes['inkscape:label'];\n  if (!labeltext)\n    return {\n      label: attributes['id']\n    };\n  let arr = labeltext.split('=');\n  /*    if (arr.length) {arr = labeltext.split('-')}*/\n\n  let label = arr[0],\n      labelvalue = arr[1];\n  return {\n    label,\n    labelvalue\n  };\n}\n\nfunction getMeasures(item, idtext, scalefactor) {\n  let itemtype = item.type;\n  let arr = idtext.split('-');\n  //получаем массив символов измерений\n  const setchars = {\n    rect: ['w', 'h', 'area', 'p', 'c'],\n    ellipse: ['area', 'w', 'h', 'p', 'c'],\n    circle: ['area', 'w', 'h', 'c', 'diameter'],\n    path: ['area', 'l', 'h'],\n    line: ['l', 'h'],\n    text: ['t', 'y'],\n    image: ['file', 'folder'],\n    g: ['count', 'd', 'area']\n  };\n  //все возможные символы измерений\n  const defchars = {\n    measure: {\n      rect: ['w', 'h'],\n      ellipse: ['w', 'h'],\n      circle: ['diameter'],\n      path: ['l'],\n      line: ['l'],\n      text: ['t'],\n      image: ['file', 'folder'],\n      g: ['count', 'd']\n    },\n    strat: {\n      ellipse: ['c'],\n      circle: ['c'],\n      line: ['h', 'start'],\n      path: ['h', 'start'],\n      text: ['t', 'y'],\n      g: ['count']\n    }\n  };\n  //измерения по умолчанию\n\n  if (!setchars[itemtype]) return false;\n  // если тип элемента неопределен, выходим\n\n  let chars = matchArr(arr, setchars[itemtype], itemtype);\n  //if (itemtype='g') {debugger;}\n  if (chars.length === 0) chars = defchars[mtype][itemtype];\n  //измерения по умолчанию\n  // если тип элемента неопределен, выходим\n  if (!chars) return false;\n\n  let measures = {};\n  chars.forEach((ch) => {\n    measures[ch] = measure(item, itemtype + \"-\" + ch, scalefactor);\n    //measures.push(measure(item, ch));\n  });\n  //debugger;\n  return measures;\n  function matchArr(a1, a2) {\n    //совпадающие элементы массивов\n    let idx = 0,\n        matchingElements = [];\n    for (let i = 0; i < a2.length; i++) {\n      idx = a1.indexOf(a2[i]);\n      if (idx >= 0) matchingElements.push(a1[idx]);\n    }\n    return matchingElements;\n  }\n}\n\nfunction measure(item, char, scalefactor) {\n  let attributes = item.attr();\n  var value = 0;\n  let type = 'na';\n  switch (char) {\n    case 'ellipse-c':\n      value = { x: item.cx() / scalefactor, y: item.cy() / scalefactor };\n      break;\n    case 'ellipse-w':\n      value = item.width() / scalefactor;\n      break;\n    case 'ellipse-h':\n      value = item.height() / scalefactor;\n      break;\n    case 'line-l':\n      var points = item.array().value;\n      var point1 = points[0];\n      var point2 = points[1];\n      value = dist(point1, point2) / scalefactor;\n      // debugger;\n      break;\n    case 'line-h':\n      var points = item.array().value;\n      var point1 = points[0];\n      var point2 = points[1];\n      value = dist(point1, point2) / scalefactor;\n      // debugger;\n      break;\n    case 'line-start':\n      var x = item.attr('x1'),\n          y = item.attr('y1'),\n          y2 = item.attr('y2');\n      debugger;\n      if (y2 > y) y = y2;\n      value = { x, y };\n      break;\n    case 'circle-c':\n      value = { x: item.cx() / scalefactor, y: item.cy() / scalefactor };\n      break;\n    case 'circle-diameter' || 'circle-h':\n      value = item.height() / scalefactor;\n      //  debugger;\n      break;\n    case 'rect-start':\n      value = { x: item.x() / scalefactor, y: item.y() / scalefactor };\n      break;\n    case 'rect-c':\n      value = { x: item.cx() / scalefactor, y: item.cy() / scalefactor };\n      break;\n    case 'rect-area':\n      value =\n        (attributes.width * attributes.height) / (scalefactor * scalefactor);\n      //debugger;\n      break;\n    case 'rect-l':\n      value = attributes.height / scalefactor;\n      break;\n    case 'rect-w':\n      value = item.width() / scalefactor;\n      break;\n    case 'rect-h':\n      value = item.height() / scalefactor;\n      break;\n    case 'circle-area':\n      var R = item.height() / 2;\n      value = (Math.PI * (R * R)) / (scalefactor * scalefactor);\n      break;\n    case 'path-start':\n      arrayPoints = item.array().value;\n      var y = arrayPoints[0][2],\n          x = 0,\n          numberOfPoints = arrayPoints.length;\n      arrayPoints.forEach((point) => {\n        // body...\n        if (y < point[2]) y = point[2];\n        x = x + point[1];\n      });\n      x /= numberOfPoints;\n      value = { x: x / scalefactor, y: y / scalefactor };\n      // debugger;\n      break;\n    case 'path-h':\n      value = item.length() / scalefactor;\n      break;\n    case 'path-area' || 'ellipse-area' || 'circle-area':\n      value = calcPathArea(item.node) / (scalefactor * scalefactor);\n      break;\n    case 'path-l':\n      value = item.length() / scalefactor;\n      // debugger;\n      break;\n    case 'text-t':\n      if (item.node.childNodes.length > 1) {\n        let tspan = SVG.select('tspan', item.node).members[0].node.textContent;\n        let d = SVG.select('desc', item.node).members[0];\n        let t = SVG.select('title', item.node).members[0];\n        let desc = '',\n            title = '';\n        if (d) desc = '-' + d.node.textContent;\n        if (t) title = '-' + t.node.textContent;\n        var value = tspan + title + desc;\n      } else {\n        var value = item.text();\n      }\n\n      //debugger;\n      break;\n    case 'text-y':\n      value = item.attr('y') / scalefactor;\n      //  debugger;\n      break;\n    case 'image-file':\n      var filepath = attributes['xlink:href'].split('/');\n      value = filepath[filepath.length - 1].split('.')[0];\n      break;\n    case 'image-folder':\n      var filepath = attributes['xlink:href'].split('/');\n      value = filepath[filepath.length - 2];\n      break;\n    case 'g-d':\n      //debugger;\n      var rect = item.select('rect').members[0];\n      if (rect) {\n        let attr = rect.attr();\n        var area = (attr.width * attr.height) / (scalefactor * scalefactor);\n      }\n      var count = item.children().length - 1;\n      value = count / area;\n      break;\n    case 'g-count':\n      //debugger;\n      value = item.children().length - 1;\n      break;\n    default:\n  }\n\n  // return обект с измерением и его типом\n  if (value) {\n    return value;\n  } else {\n    return 'нет измерений';\n  }\n}\n//----------------------- Line length-------------------------------------\nfunction dist(point1, point2) {\n  let x1 = point1[0],\n      x2 = point2[0];\n  let y1 = point1[1],\n      y2 = point2[1];\n  return Math.sqrt((x2 -= x1) * x2 + (y2 -= y1) * y2);\n}\n//----------------------- AREA-------------------------------------\nfunction calcPathArea(path) {\n  // calculate area from outline path...\n  function polyArea(poly) {\n    let area = 0,\n        pts = poly.points,\n        len = pts.numberOfItems;\n    for (let i = 0; i < len; ++i) {\n      let p1 = pts.getItem(i),\n          p2 = pts.getItem((i + len - 1) % len);\n      area += (p2.x + p1.x) * (p2.y - p1.y);\n    }\n    return Math.abs(area / 2);\n  }\n  let poly = pathToPolygonViaSubdivision(path, 0);\n  let numberOfItems = poly.points.numberOfItems;\n  return polyArea(poly);\n}\n////------------------------Budnikov------------------------------\n/*FAD:\"32.61\"\nLAD:\"36.13\"\nPubCode:\"Arefiev_et_al2015\"\nSectCode:\"Sec_Mikulino\"\nname:\"Toyemia tverdochlebovi \"\nnote:\"\"\nx:15180.921\n*/\nfunction BudnikovDataOptimization(points) {\n  let rowArray = [];\n  points.forEach((point) => {\n    var rowNameExist = point.name in rowArray;\n    if (!rowNameExist) {\n      rowArray[point.name] = {\n        FAD: point.FAD.toFixed(2),\n        LAD: point.LAD.toFixed(2),\n        PubCode: point.PubCode,\n        SectCode: point.SectCode,\n        name: point.name,\n        note: point.note,\n        x: point.x\n      };\n    }\n    if (rowArray[point.name].FAD > point.FAD)\n      rowArray[point.name].FAD = point.FAD.toFixed(2);\n    if (rowArray[point.name].LAD < point.LAD)\n      rowArray[point.name].LAD = point.LAD.toFixed(2);\n  });\n  //console.log(rowArray);\n  return rowArray;\n} //end BudnikovDataOptimization\n////------------------------------------------------------\nfunction prepareBudnikovSVG(rawSvg) {\n  // body...\n  mtype = 'strat';\n  $('#svgcanvas').empty();\n  let draw = SVG('svgcanvas').size('800', '900');\n  draw.svg(rawSvg);\n  //получить группы как родители scalebar\n  //groups - группы с масштабными линейками\n  let maingroup = SVG.get('budnikov');\n  let lineArray = SVG.get('scalebar').attr();\n  let boreArray = SVG.select('rect').members[0].attr();\n  let boreName = boreArray.id;\n  let Yzero = boreArray.y + boreArray.height;\n  let scalefactor =\n    200 / dist(lineArray.x1, lineArray.x2, lineArray.y1, lineArray.y2);\n  let groups = maingroup.children();\n  let points = [];\n  groups.forEach((group) => {\n    if (group.type === \"metadata\") return;\n    if (group.attr(\"id\") === \"descr\") return;\n\n    var ellArr = group.select(\"ellipse\").members[0].attr();\n    var rY = ellArr.ry,\n      cY = ellArr.cy;\n    // debugger;\n\n    var items = group.children();\n    items.forEach(function(item) {\n      var type = item.type;\n      if (type != \"ellipse\" && type != \"g\") {\n        var itemID = item.attr(\"id\");\n        console.log(itemID);\n        var itemNames = itemID.slice(1).split(\"-\");\n        itemNames.forEach(function(name) {\n          var point = {\n            FAD: 0,\n            LAD: 0,\n            PubCode: \"BudnikovScheme1\",\n            SectCode: boreName,\n            name: \"\",\n            note: \"\",\n            x: 0\n          };\n          point.name = name;\n          point.LAD = (Yzero - cY + rY) * scalefactor;\n          point.FAD = (Yzero - cY - rY) * scalefactor;\n          point.x = cY.toFixed(2);\n          points.push(point);\n        });\n      }\n    });\n  });\n  console.log(points);\n  let results = this.BudnikovDataOptimization(points);\n  return results;\n  //debugger;\n\n  function dist(x1, x2, y1, y2) {\n    return Math.sqrt((x2 -= x1) * x2 + (y2 -= y1) * y2);\n  }\n}\n//-------\n\n///------------------------ STRAT------------------------------------------\nfunction prepareSecSVG(rawSvg) {\n  // body...\n  mtype = 'strat';\n  $('#svgcanvas').empty();\n  let draw = SVG('svgcanvas').size('800', '900');\n  draw.svg(rawSvg);\n  //получить группы как родители scalebar\n  //groups - группы с масштабными линейками\n  let groups = getGroups();\n  //debugger;\n  //$(\".progress-bar\").css(\"width\", '20%');\n  //debugger;\n  // перебор и получение элементов для каждой группы\n  let GroupItems = [];\n  groups.forEach((groupitem, i) => {\n    GroupItems.push(getItems(groupitem));\n  });\n  debugger;\n  let result = [];\n  GroupItems.forEach((groupitem) => {\n    const rows = prepareSecItemGroup(groupitem);\n    //debugger;\n    result = result.concat(rows);\n  });\n  return result;\n  console.log(Items);\n}\n\nfunction prepareSecItemGroup(ItemGroup) {\n  // body...\n\n  //var scalefactor=ItemGroup.scalefactor;\n  let elements = ItemGroup.elements;\n  let head = {\n    scalefactor: 1\n  };\n  let rows = [];\n  //'PubCode','SectCode','name','FAD','LAD'\n  let textnames = [];\n  elements.text.forEach((text) => {\n    if (text.label === \"PubCode\") {\n      head.PubCode = text.measures.t;\n      return;\n    }\n    if (text.label === \"SectCode\") {\n      head.SectCode = text.measures.t;\n      return;\n    }\n    textnames.push({ name: text.measures.t, y: text.measures.y });\n    //console.log (text);\n  });\n  elements.ellipse.forEach((ellipse) => {\n    if (ellipse.label === \"zero\" || ellipse.label === \"#zero\")\n      head.zero = ellipse.measures.c;\n  });\n  if (!head.zero) {\n    elements.circle.forEach((circle) => {\n      if (circle.label === \"zero\" || circle.label === \"#zero\")\n        head.zero = circle.measures.c;\n    });\n  }\n  //debugger;\n  /*\t\telements.rect.forEach(function(el) {\n\t\t\tvar ad = getFADLAD(el);\n\t\t\t//debugger;\n\t\t\tvar row = {\n\t\t\t\tPubCode:head.PubCode,\n\t\t\t\tSectCode:head.SectCode,\n\t\t\t\tname:el.id,\n\t\t\t\tFAD:ad.FAD,\n\t\t\t\tLAD:ad.LAD, //.toFixed(2)\n\t\t\t\tnote:'',\n                y:el.measures.start.y\n\t\t\t};\n\t\t\trows.push(row);\n \t\t}); */\n\n  elements.path.forEach((el) => {\n    var ad = getFADLAD(el);\n    //debugger;\n    var row = {\n      PubCode: head.PubCode,\n      SectCode: head.SectCode,\n      name: el.label,\n      FAD: ad.FAD,\n      LAD: ad.LAD, //.toFixed(2)\n      note: \"\",\n      x: el.measures.start.x\n    };\n    rows.push(row);\n  });\n  elements.line.forEach((el) => {\n    //debugger;\n    var ad = getFADLAD(el);\n    //debugger;\n    var row = {\n      PubCode: head.PubCode,\n      SectCode: head.SectCode,\n      name: el.id,\n      FAD: ad.FAD,\n      LAD: ad.LAD, //.toFixed(2)\n      note: \"\",\n      x: el.measures.start.x\n    };\n    rows.push(row);\n  });\n  //debugger;\n  rows.sort(compareNumeric);\n  if (textnames.length === rows.length) {\n    textnames.sort(compareText);\n    rows.forEach((row, i) => {\n      row.name = textnames[i].name;\n      rows[i] = row;\n    });\n  }\n\n  //debugger;\n  return rows;\n  function compareText(a, b) {\n    //debugger;\n    return b.y - a.y;\n  }\n  function compareNumeric(a, b) {\n    //debugger;\n    return b.x - a.x;\n  }\n  function getFADLAD(el) {\n    // body...\n    var el = el.measures;\n    el.end = el.start.y - el.h;\n    let FAD = head.zero.y - el.start.y;\n    let LAD = head.zero.y - el.end;\n    if (FAD < 0) debugger;\n    //debugger;\n    return { FAD: FAD.toFixed(2), LAD: LAD.toFixed(2) };\n  }\n}\n\n// path:      an SVG <path> element\n// threshold: a 'close-enough' limit (ignore subdivisions with area less than this)\n// segments:  (optional) how many segments to subdivisions to create at each level\n// returns:   a new SVG <polygon> element\nfunction pathToPolygonViaSubdivision(path, threshold, segments) {\n  if (!threshold) threshold = 0.0001; // Get really, really close\n  if (!segments) segments = 3; // 2 segments creates 0-area triangles\n\n  let points = subdivide(ptWithLength(0), ptWithLength(path.getTotalLength()));\n\n  for (let i = points.length; i--;) points[i] = [points[i].x, points[i].y];\n\n  let doc = path.ownerDocument;\n  let poly = doc.createElementNS('http://www.w3.org/2000/svg', 'polygon');\n  poly.setAttribute('points', points.join(' '));\n  return poly;\n\n  // Record the distance along the path with the point for later reference\n  function ptWithLength(d) {\n    let pt = path.getPointAtLength(d);\n    pt.d = d;\n    return pt;\n  }\n\n  // Create segments evenly spaced between two points on the path.\n  // If the area of the result is less than the threshold return the endpoints.\n  // Otherwise, keep the intermediary points and subdivide each consecutive pair.\n  function subdivide(p1, p2) {\n    let pts = [p1];\n    for (var i = 1, step = (p2.d - p1.d) / segments; i < segments; i++) {\n      pts[i] = ptWithLength(p1.d + step * i);\n    }\n    pts.push(p2);\n    if (polyArea(pts) <= threshold) return [p1, p2];\n    else {\n      let result = [];\n      for (var i = 1; i < pts.length; ++i) {\n        let mids = subdivide(pts[i - 1], pts[i]);\n        mids.pop(); // We'll get the last point as the start of the next pair\n        result = result.concat(mids);\n      }\n      result.push(p2);\n      return result;\n    }\n  }\n\n  // Calculate the area of an polygon represented by an array of points\n  function polyArea(points) {\n    // debugger;\n    let p1, p2;\n    for (var area = 0, len = points.length, i = 0; i < len; ++i) {\n      p1 = points[i];\n      p2 = points[(i - 1 + len) % len]; // Previous point, with wraparound\n      area += (p2.x + p1.x) * (p2.y - p1.y);\n    }\n    return Math.abs(area / 2);\n  }\n}\n\nmodule.exports = {\n  prepareSVG\n};\n"],"file":"svgm.js"}