{"version":3,"file":"svgd.dev.js","sources":["../test/instance.js","../src/math.js","../src/itemprops.js","../src/groups.js","../src/items.js","../src/prepres.js","../test/debugnode.js"],"sourcesContent":["\r\nfunction getTestSVGcontent(filepath) {\r\n  //read test .svg file\r\n  return require(\"fs\").readFileSync(filepath, \"utf8\");\r\n}\r\nfunction getSVGinstance(rawSVG,SVG) {\r\n  const window = require(\"svgdom\");\r\n  const nodeSVG = new SVG(window);\r\n  const document = window.document;\r\n  // create svg.js instance\r\n  const draw = nodeSVG(document.documentElement);\r\n  draw.clear();\r\n  draw.svg(rawSVG);\r\n  return nodeSVG;\r\n}\r\nexport { getTestSVGcontent, getSVGinstance };","/**\r\n * svgm\r\n * https://github.com/mironcat/svgm\r\n *\r\n * Copyright (c) 2018 mironcat\r\n * Licensed under the MIT license.\r\n */\r\n'use strict';\r\n//----------------------- Line length-------------------------------------\r\nfunction dist(point1, point2) {\r\n  let x1 = point1[0],\r\n    x2 = point2[0];\r\n  let y1 = point1[1],\r\n    y2 = point2[1];\r\n  return Math.sqrt((x2 -= x1) * x2 + (y2 -= y1) * y2);\r\n}\r\n// -------------------------PATH ANGLE--------------------------------------\r\nfunction calcAngle(points,Radian=false) {\r\n    var p1 = getPoint(points[1]);\r\n    var p2 = getPoint(points[0]);\r\n    var p3 = getPoint(points[2]);\r\n    debugger;\r\n    var p12 = Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\r\n    var p13 = Math.sqrt(Math.pow(p1.x - p3.x, 2) + Math.pow(p1.y - p3.y, 2));\r\n    var p23 = Math.sqrt(Math.pow(p2.x - p3.x, 2) + Math.pow(p2.y - p3.y, 2));\r\n    //angle in radians\r\n    var resultRadian = Math.acos((Math.pow(p12, 2) + Math.pow(p13, 2) - Math.pow(p23, 2)) / (2 * p12 * p13));\r\n    //angle in degrees\r\n    var resultDegree = (Math.acos((Math.pow(p12, 2) + Math.pow(p13, 2) - Math.pow(p23, 2)) / (2 * p12 * p13)) * 180) / Math.PI;\r\n    if (Radian) return resultRadian;\r\n    return resultDegree;\r\n\r\n}\r\nfunction getPoint(point) {\r\n    return {\r\n        x:point[1],\r\n        y:point[2]\r\n    }\r\n}\r\n//----------------------- AREA-------------------------------------\r\nfunction calcPathArea(path) {\r\n  // calculate area from outline path...\r\n  function polyArea(poly) {\r\n    let area = 0,\r\n      pts = poly.points,\r\n      len = pts.numberOfItems;\r\n    for (let i = 0; i < len; ++i) {\r\n      let p1 = pts.getItem(i),\r\n        p2 = pts.getItem((i + len - 1) % len);\r\n      area += (p2.x + p1.x) * (p2.y - p1.y);\r\n    }\r\n    return Math.abs(area / 2);\r\n  }\r\n  let poly = pathToPolygonViaSubdivision(path, 0);\r\n  let numberOfItems = poly.points.numberOfItems;\r\n  return polyArea(poly);\r\n}\r\n// path:      an SVG <path> element\r\n// threshold: a 'close-enough' limit (ignore subdivisions with area less than this)\r\n// segments:  (optional) how many segments to subdivisions to create at each level\r\n// returns:   a new SVG <polygon> element\r\nfunction pathToPolygonViaSubdivision(path, threshold, segments) {\r\n  if (!threshold) threshold = 0.0001; // Get really, really close\r\n  if (!segments) segments = 3; // 2 segments creates 0-area triangles\r\n\r\n  let points = subdivide(ptWithLength(0), ptWithLength(path.getTotalLength()));\r\n\r\n  for (let i = points.length; i--; ) points[i] = [points[i].x, points[i].y];\r\n\r\n  let doc = path.ownerDocument;\r\n  let poly = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\r\n  poly.setAttribute(\"points\", points.join(\" \"));\r\n  return poly;\r\n\r\n  // Record the distance along the path with the point for later reference\r\n  function ptWithLength(d) {\r\n    let pt = path.getPointAtLength(d);\r\n    pt.d = d;\r\n    return pt;\r\n  }\r\n\r\n  // Create segments evenly spaced between two points on the path.\r\n  // If the area of the result is less than the threshold return the endpoints.\r\n  // Otherwise, keep the intermediary points and subdivide each consecutive pair.\r\n  function subdivide(p1, p2) {\r\n    let pts = [p1];\r\n    for (var i = 1, step = (p2.d - p1.d) / segments; i < segments; i++) {\r\n      pts[i] = ptWithLength(p1.d + step * i);\r\n    }\r\n    pts.push(p2);\r\n    if (polyArea(pts) <= threshold) return [p1, p2];\r\n    else {\r\n      let result = [];\r\n      for (var i = 1; i < pts.length; ++i) {\r\n        let mids = subdivide(pts[i - 1], pts[i]);\r\n        mids.pop(); // We'll get the last point as the start of the next pair\r\n        result = result.concat(mids);\r\n      }\r\n      result.push(p2);\r\n      return result;\r\n    }\r\n  }\r\n\r\n  // Calculate the area of an polygon represented by an array of points\r\n  function polyArea(points) {\r\n    // debugger;\r\n    let p1, p2;\r\n    for (var area = 0, len = points.length, i = 0; i < len; ++i) {\r\n      p1 = points[i];\r\n      p2 = points[(i - 1 + len) % len]; // Previous point, with wraparound\r\n      area += (p2.x + p1.x) * (p2.y - p1.y);\r\n    }\r\n    return Math.abs(area / 2);\r\n  }\r\n}\r\n\r\nexport { dist, calcAngle, calcPathArea };","/**\r\n * svgm\r\n * https://github.com/mironcat/svgm\r\n *\r\n * Copyright (c) 2018 mironcat\r\n * Licensed under the MIT license.\r\n */\r\nimport { dist,calcAngle,calcPathArea } from \"./math\";\r\n\r\nconst MTYPE = \"measure\";\r\nfunction getProps(item, scalefactor) {\r\n  // body...\r\n  let labels = getLabels(item);\r\n  let label = labels.label;\r\n  if (label === \"scalebar\") return label;\r\n  let type = item.type;\r\n  let attributes = item.attr();\r\n  let id = attributes[\"id\"];\r\n  let el = {\r\n    type,\r\n    id,\r\n    label\r\n  };\r\n  let measures = getMeasures(item, id, scalefactor);\r\n  if (measures) el.measures = measures;\r\n\r\n  let desc = SVG.select(\"desc\", item.node).members[0];\r\n  let title = SVG.select(\"title\", item.node).members[0];\r\n  if (desc) el.desc = desc.node.textContent;\r\n  if (title) {\r\n    //console.log(title);\r\n    el.title = title.node.textContent;\r\n  }\r\n\r\n  //debugger;\r\n  return el;\r\n}\r\nfunction getLabels(item) {\r\n  // body...\r\n\r\n  let attributes = item.attr();\r\n  // debugger;\r\n  let labeltext = attributes[\"inkscape:label\"];\r\n  if (!labeltext)\r\n    return {\r\n      label: attributes[\"id\"]\r\n    };\r\n  if (typeof (labeltext) == 'number') return {\r\n    label: labeltext\r\n  };\r\n  let arr = labeltext.split(\"=\");\r\n  /*    if (arr.length) {arr = labeltext.split('-')}*/\r\n\r\n  let label = arr[0],\r\n    labelvalue = arr[1];\r\n  return {\r\n    label,\r\n    labelvalue\r\n  };\r\n}\r\nfunction getMeasures(item, idtext, scalefactor) {\r\n  let itemtype = item.type;\r\n  let arr = idtext.split(\":\");\r\n  console.log(arr);\r\n  //получаем массив символов измерений\r\n  const setchars = {\r\n    rect: [\"w\", \"h\", \"area\", \"p\", \"c\"],\r\n    ellipse: [\"area\", \"w\", \"h\", \"p\", \"c\"],\r\n    circle: [\"area\", \"w\", \"h\", \"c\", \"diameter\"],\r\n    path: [\"area\", \"l\", \"h\", \"angle\"],\r\n    line: [\"l\", \"h\"],\r\n    text: [\"t\", \"y\"],\r\n    image: [\"file\", \"folder\"],\r\n    g: [\"count\", \"d\", \"area\"]\r\n  };\r\n  //все возможные символы измерений\r\n  const defchars = {\r\n    measure: {\r\n      rect: [\"w\", \"h\"],\r\n      ellipse: [\"w\", \"h\"],\r\n      circle: [\"diameter\"],\r\n      path: [\"l\"],\r\n      line: [\"l\"],\r\n      text: [\"t\"],\r\n      image: [\"file\", \"folder\"],\r\n      g: [\"count\", \"d\"]\r\n    },\r\n    strat: {\r\n      ellipse: [\"c\"],\r\n      circle: [\"c\"],\r\n      line: [\"h\", \"start\"],\r\n      path: [\"h\", \"start\"],\r\n      text: [\"t\", \"y\"],\r\n      g: [\"count\"]\r\n    }\r\n  };\r\n  //измерения по умолчанию\r\n\r\n  if (!setchars[itemtype]) return false;\r\n  // если тип элемента неопределен, выходим\r\n\r\n  let chars = matchArr(arr, setchars[itemtype], itemtype);\r\n  //if (itemtype='g') {debugger;}\r\n  if (chars.length === 0) chars = defchars[MTYPE][itemtype];\r\n  //измерения по умолчанию\r\n  // если тип элемента неопределен, выходим\r\n  if (!chars) return false;\r\n\r\n  let measures = {};\r\n  chars.forEach(ch => {\r\n    measures[ch] = measure(item, itemtype + \"-\" + ch, scalefactor);\r\n    //measures.push(measure(item, ch));\r\n  });\r\n  //debugger;\r\n  return measures;\r\n  function matchArr(a1, a2) {\r\n    //совпадающие элементы массивов\r\n    let idx = 0,\r\n      matchingElements = [];\r\n    for (let i = 0; i < a2.length; i++) {\r\n      idx = a1.indexOf(a2[i]);\r\n      if (idx >= 0) matchingElements.push(a1[idx]);\r\n    }\r\n    return matchingElements;\r\n  }\r\n}\r\nfunction measure(item, char, scalefactor) {\r\n  let attributes = item.attr();\r\n  var value = 0;\r\n  let type = \"na\";\r\n  switch (char) {\r\n    case \"ellipse-c\":\r\n      value = { x: item.cx() / scalefactor, y: item.cy() / scalefactor };\r\n      break;\r\n    case \"ellipse-w\":\r\n      value = item.width() / scalefactor;\r\n      break;\r\n    case \"ellipse-h\":\r\n      value = item.height() / scalefactor;\r\n      break;\r\n    case \"line-l\":\r\n      var points = item.array().value;\r\n      var point1 = points[0];\r\n      var point2 = points[1];\r\n      value = dist(point1, point2) / scalefactor;\r\n      // debugger;\r\n      break;\r\n    case \"line-h\":\r\n      var points = item.array().value;\r\n      var point1 = points[0];\r\n      var point2 = points[1];\r\n      value = dist(point1, point2) / scalefactor;\r\n      // debugger;\r\n      break;\r\n    case \"line-start\":\r\n      var x = item.attr(\"x1\"),\r\n        y = item.attr(\"y1\"),\r\n        y2 = item.attr(\"y2\");\r\n      debugger;\r\n      if (y2 > y) y = y2;\r\n      value = { x, y };\r\n      break;\r\n    case \"circle-c\":\r\n      value = { x: item.cx() / scalefactor, y: item.cy() / scalefactor };\r\n      break;\r\n    case \"circle-diameter\" || \"circle-h\":\r\n      value = item.height() / scalefactor;\r\n      //  debugger;\r\n      break;\r\n    case \"rect-start\":\r\n      value = { x: item.x() / scalefactor, y: item.y() / scalefactor };\r\n      break;\r\n    case \"rect-c\":\r\n      value = { x: item.cx() / scalefactor, y: item.cy() / scalefactor };\r\n      break;\r\n    case \"rect-area\":\r\n      value =\r\n        (attributes.width * attributes.height) / (scalefactor * scalefactor);\r\n      //debugger;\r\n      break;\r\n    case \"rect-l\":\r\n      value = attributes.height / scalefactor;\r\n      break;\r\n    case \"rect-w\":\r\n      value = item.width() / scalefactor;\r\n      break;\r\n    case \"rect-h\":\r\n      value = item.height() / scalefactor;\r\n      break;\r\n    case \"circle-area\":\r\n      var R = item.height() / 2;\r\n      value = (Math.PI * (R * R)) / (scalefactor * scalefactor);\r\n      break;\r\n    case \"path-start\":\r\n      arrayPoints = item.array().value;\r\n      var y = arrayPoints[0][2],\r\n        x = 0,\r\n        numberOfPoints = arrayPoints.length;\r\n      arrayPoints.forEach(point => {\r\n        // body...\r\n        if (y < point[2]) y = point[2];\r\n        x = x + point[1];\r\n      });\r\n      x /= numberOfPoints;\r\n      value = { x: x / scalefactor, y: y / scalefactor };\r\n      // debugger;\r\n      break;\r\n    case \"path-h\":\r\n      value = item.length() / scalefactor;\r\n      break;\r\n    case \"path-area\" || \"ellipse-area\" || \"circle-area\":\r\n      value = calcPathArea(item.node) / (scalefactor * scalefactor);\r\n      break;\r\n    case \"path-l\":\r\n      value = item.length() / scalefactor;\r\n      // debugger;\r\n      break;\r\n    case \"path-angle\":\r\n      var points = item.array().value;\r\n      if (points.length != 3) {\r\n        value = \"err. path-angle must be with 3 points\";\r\n      } else {\r\n        value = calcAngle(points);\r\n      }\r\n      break;\r\n    case \"text-t\":\r\n      if (item.node.childNodes.length > 1) {\r\n        let tspan = SVG.select(\"tspan\", item.node).members[0].node.textContent;\r\n        let d = SVG.select(\"desc\", item.node).members[0];\r\n        let t = SVG.select(\"title\", item.node).members[0];\r\n        let desc = \"\",\r\n          title = \"\";\r\n        if (d) desc = \"-\" + d.node.textContent;\r\n        if (t) title = \"-\" + t.node.textContent;\r\n        var value = tspan + title + desc;\r\n      } else {\r\n        var value = item.text();\r\n      }\r\n\r\n      //debugger;\r\n      break;\r\n    case \"text-y\":\r\n      value = item.attr(\"y\") / scalefactor;\r\n      //  debugger;\r\n      break;\r\n    case \"image-file\":\r\n      var filepath = attributes[\"xlink:href\"].split(\"/\");\r\n      value = filepath[filepath.length - 1].split(\".\")[0];\r\n      break;\r\n    case \"image-folder\":\r\n      var filepath = attributes[\"xlink:href\"].split(\"/\");\r\n      value = filepath[filepath.length - 2];\r\n      break;\r\n    case \"g-d\":\r\n      //debugger;\r\n      var rect = item.select(\"rect\").members[0];\r\n      if (rect) {\r\n        let attr = rect.attr();\r\n        var area = (attr.width * attr.height) / (scalefactor * scalefactor);\r\n      }\r\n      var count = item.children().length - 1;\r\n      value = count / area;\r\n      break;\r\n    case \"g-count\":\r\n      //debugger;\r\n      value = item.children().length - 1;\r\n      break;\r\n    default:\r\n  }\r\n\r\n  // return обект с измерением и его типом\r\n  if (value) {\r\n    return value;\r\n  } else {\r\n    return \"нет измерений\";\r\n  }\r\n}\r\nexport { getProps, getLabels };","/**\r\n * svgm\r\n * https://github.com/mironcat/svgm\r\n *\r\n * Copyright (c) 2018 mironcat\r\n * Licensed under the MIT license.\r\n */\r\n'use strict';\r\nimport { getLabels } from \"./itemprops\";\r\nfunction getGroups(SVG) {\r\n    /**\r\n     * iteration and check path, rects and lines for scalebar label\r\n     * then calculate scalefactor and return parent group for \r\n     * each scalebar.\r\n     * @SVG - svg.js instance\r\n     */\r\n    const paths = SVG.select('path').members;\r\n    let scalebars = scalebarIteration(paths);\r\n    const rects = SVG.select('rect').members;\r\n    let rectscalebars = scalebarIteration(rects);\r\n    if (rectscalebars) scalebars = scalebars.concat(rectscalebars);\r\n    const lines = SVG.select('line').members;\r\n    let linescalebars = scalebarIteration(lines);\r\n    if (linescalebars) scalebars = scalebars.concat(linescalebars);\r\n    let groups = [];\r\n    if (scalebars)\r\n        scalebars.forEach((scalebar) => {\r\n            var group = scalebar.item.parent();\r\n            groups.push({\r\n                group: group,\r\n                scalefactor: scalebar.scalefactor\r\n            });\r\n        });\r\n    return groups;\r\n\r\n}\r\nfunction scalebarIteration(items) {\r\n    /**\r\n     * Iteration through potencial scalebar elements \"items\" (path, rects and lines) \r\n     * and calulate scalefactor by scalebarFinder\r\n     */\r\n    let scalebars = [];\r\n    items.forEach((item) => {\r\n        var scalefactor = scalebarFinder(item);\r\n        if (scalefactor)\r\n            scalebars.push({\r\n                item: item,\r\n                scalefactor: scalefactor\r\n            });\r\n    });\r\n    return scalebars;\r\n}\r\nfunction scalebarFinder(item) {\r\n    let scalefactorConstructor = {\r\n        path(item, scalebarvalue) {\r\n            // body...\r\n\r\n            var d = item.node.getAttribute(\"d\");\r\n            var z = d.indexOf(\"z\");\r\n            var length = item.length();\r\n            if (z > 0) {\r\n                alert(\r\n                    \"Масштабный отрезок в виде закрытой кривой! Это может привести к ошибочным вычислениям.\" +\r\n                    \" Исправьте отрезок или используйте прямоугольник (rectangles) для масштабного отрезка\"\r\n                );\r\n                length = item.length() / 2;\r\n            }\r\n\r\n            return length / scalebarvalue;\r\n        },\r\n        line(item, scalebarvalue) {\r\n            // body...\r\n            var points = item.array().value;\r\n            var point1 = points[0];\r\n            var point2 = points[1];\r\n            var length = dist(point1, point2);\r\n            return length / scalebarvalue;\r\n            function dist(point1, point2) {\r\n                var x1 = point1[0],\r\n                    x2 = point2[0];\r\n                var y1 = point1[1],\r\n                    y2 = point2[1];\r\n                return Math.sqrt((x2 -= x1) * x2 + (y2 -= y1) * y2);\r\n            }\r\n        },\r\n        rect(item, scalebarvalue) {\r\n            // body...\r\n            var length = item.width(),\r\n                rectheight = item.height();\r\n            if (rectheight > length) length = rectheight;\r\n            return length / scalebarvalue;\r\n        }\r\n    };\r\n\r\n    // body... возвращает scalefactor или false\r\n    let type = item.type;\r\n    let labels = getLabels(item);\r\n    let label = labels.label;\r\n    if (label === 'scalebar') {\r\n        let scalebarvalue = Number(labels.labelvalue);\r\n        let scalefactor = scalefactorConstructor[type](item, scalebarvalue);\r\n        return scalefactor;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport { getGroups };","/**\r\n * svgm\r\n * https://github.com/mironcat/svgm\r\n *\r\n * Copyright (c) 2018 mironcat\r\n * Licensed under the MIT license.\r\n */\r\n'use strict';\r\nimport { getProps } from './itemprops';\r\nfunction getGroupItems(groups) {\r\n    const gi =[];\r\n    groups.forEach((groupitem, i) => {\r\n        gi.push(getItems(groupitem));\r\n    });\r\n    return gi;\r\n};\r\nfunction getItems(groupitem) {\r\n    ///sfaf\r\n    let items = {\r\n        scalefactor: groupitem.scalefactor,\r\n        elements: {\r\n            image: [],\r\n            text: [],\r\n            path: [],\r\n            line: [],\r\n            rect: [],\r\n            ellipse: [],\r\n            circle: [],\r\n            g: []\r\n        }\r\n    };\r\n    let elements = groupitem.group.children();\r\n\r\n    //debugger;\r\n    elements.forEach((item) => {\r\n        var el = getProps(item, groupitem.scalefactor, SVG);\r\n        if (el != \"scalebar\" && items.elements[el.type])\r\n            items.elements[el.type].push(el);\r\n    });\r\n\r\n    return items;\r\n}\r\n\r\n\r\nexport { getGroupItems };","/**\r\n * svgm\r\n * https://github.com/mironcat/svgm\r\n *\r\n * Copyright (c) 2018 mironcat\r\n * Licensed under the MIT license.\r\n */\r\n'use strict';\r\nfunction getResults(gi, filename) {\r\n    let results = [];\r\n    gi.forEach((groupitem) => {\r\n        const rows = prepareItemGroup(groupitem); // подготовка для таблицы\r\n        results = results.concat(rows);\r\n    });\r\n    return results.map(addFileName);\r\n    function addFileName(row, index, results) {\r\n        row.filename = filename;\r\n        return (results[index] = row);\r\n    }\r\n}\r\n\r\nfunction prepareItemGroup(ItemGroup) {\r\n    // body...\r\n    //debugger;\r\n    let elements = ItemGroup.elements;\r\n    let head = {\r\n        scalefactor: ItemGroup.scalefactor\r\n    };\r\n    var rows = [];\r\n    //item\ttype\tlabel\ttitle\tmeasurevalue\tdescription\tcomments\r\n    elements.text.forEach((text) => {\r\n        if (text.label === \"name\") head.name = text.measures.t;\r\n        if (text.label === \"comments\" || text.label === \"comment\")\r\n            head.comments = text.measures.t;\r\n    });\r\n    elements.image.forEach((image) => {\r\n        head.imagefilename = image.measures.file;\r\n        head.imagefoldername = image.measures.folder;\r\n    });\r\n    if (!head.name) {\r\n        head.name = head.imagefilename;\r\n    }\r\n\r\n    var rows = [];\r\n    //debugger;\r\n    //item\tsubgroup\ttype\tlabel\ttitle\tmeasurevalue\tdescription\tcomments\r\n    elements.path.forEach((el) => {\r\n        rows = rows.concat(getRows(el));\r\n    });\r\n    elements.line.forEach((el) => {\r\n        rows = rows.concat(getRows(el));\r\n    });\r\n    elements.rect.forEach((el) => {\r\n        rows = rows.concat(getRows(el));\r\n    });\r\n    elements.ellipse.forEach((el) => {\r\n        rows = rows.concat(getRows(el));\r\n    });\r\n    elements.circle.forEach((el) => {\r\n        rows = rows.concat(getRows(el));\r\n    });\r\n    elements.g.forEach((el) => {\r\n        rows = rows.concat(getRows(el));\r\n    });\r\n    //\tdebugger;\r\n    return rows;\r\n    function getRows(el) {\r\n        // подготавливает объект element в формат Datatables\r\n\r\n        let scalefactor = head.scalefactor;\r\n        let arr = [];\r\n        for (let mt in el.measures) {\r\n            let prepvalue = el.measures[mt];\r\n            if (typeof prepvalue === 'number' && prepvalue > 1)\r\n                prepvalue = prepvalue.toFixed(2);\r\n            let row = {\r\n                name: head.name,\r\n                type: el.type + '-' + mt,\r\n                label: el.label,\r\n                value: prepvalue,\r\n                title: el.title || '',\r\n                //.toFixed(2)\r\n                description: el.desc || '',\r\n                comments: head.comments || ''\r\n            };\r\n            arr.push(row);\r\n        }\r\n        return arr;\r\n    }\r\n};\r\nexport { getResults };","//import SVG from 'svg.js';\r\nconst SVGJS = require(\"svg.js\");\r\nimport { getTestSVGcontent, getSVGinstance } from \"./instance\";\r\nimport { getGroups } from \"../src/groups\";\r\nimport { getGroupItems } from \"../src/items\";\r\nimport { getResults } from \"../src/prepres\";\r\n//read test .svg file\r\n\r\n\r\nfunction testSVGprepare(rawSVG, filename) {\r\n    const SVG = getSVGinstance(rawSVG, SVGJS);\r\n    let groups = getGroups(SVG);\r\n    //extract and measure elements\r\n    let gi = getGroupItems(groups); //array\r\n//console.log(\"from index:\", gi);\r\n    return getResults(gi, filename);\r\n}\r\n\r\nconst filename = \"./assets/test3.svg\";\r\nconst rawSVG = getTestSVGcontent(filename);\r\n\r\nconst res = testSVGprepare(rawSVG, filename);\r\nif (Array.isArray(res)) console.log(\"1. OK. res is Array\"); else console.log(\"error\");\r\n\r\n"],"names":["const","let"],"mappings":"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"}